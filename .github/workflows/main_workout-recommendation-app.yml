name: Build and deploy Python app to Azure Web App - workout-recommendation-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  APP_NAME: 'workout-recommendation-app'
  RESOURCE_GROUP: 'workout-recommendation'  # Replace with your actual RG

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increased timeout for ML dependencies
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libglib2.0-0 ffmpeg

      - name: Install Python dependencies (staged)
        run: |
          # Only install core dependencies in CI
          pip install --no-cache-dir -r requirements-core.txt
          # Skip ML deps here - they'll install during Azure startup
          pip list

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_98C86DB1C116409AB9C21A085FFA46A9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_176FE20F5C804029B572723A8A23DFCD }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6ECF10F0CB3E44E1A98FE16356C2CE98 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: .
          runtime-stack: 'PYTHON|${{ env.PYTHON_VERSION }}'
          startup-command: 'gunicorn --bind=0.0.0.0:80 --timeout 1200 --workers 2 run:app'

      - name: Verify deployment
        run: |
          curl -s https://${{ env.APP_NAME }}.azurewebsites.net/health-check | jq .