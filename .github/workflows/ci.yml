name: Run Flask Unit & Cypress Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      FLASK_ENV: testing
      FLASK_APP: run.py
      DATABASE_URL: sqlite:///test_workouts.db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.5

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest psycopg2-binary

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm install

      - name: Install Cypress binary
        run: npx cypress install

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: Set up database and seed user
        run: |
          python -c "
          from app import create_app, db;
          from app.models import User, WorkoutPreferences;
          app = create_app();
          app.app_context().push();
          # Create all tables
          db.drop_all();
          db.create_all();
          
          # Add the test user
          user = User(email='test@example.com', password='password');
          db.session.add(user);
          db.session.commit();
          "

      - name: Start Flask app
        run: |
          flask db upgrade
          # Run in testing mode with explicit host
          nohup flask run --host=0.0.0.0 --port=5000 &
          echo "Waiting for Flask..."
          sleep 10
          until curl --silent --fail http://localhost:5000; do
            echo "Waiting..."
            sleep 2
          done
          curl -v http://localhost:5000/register 

      - name: Run unit tests
        run: pytest app/test/unit

#      - name: Run Cypress tests
#        run: npx cypress run